# Kafka
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.properties.schema.registry.url=http://localhost:8081
spring.kafka.properties.specific.avro.reader=true

#spring.kafka.properties.state.dir=${STATE_DIR}
#spring.kafka.properties.request.timeout.ms=305000
#spring.kafka.properties.security.protocol=SSL
#spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.properties.ssl.keystore.location=${SSL_KEYSTORE_LOCATION}
#spring.kafka.properties.ssl.keystore.password=${SSL_KEYSTORE_PASSWORD}
#spring.kafka.properties.ssl.truststore.location=${SSL_TRUSTSTORE_LOCATION}
#spring.kafka.properties.ssl.truststore.password=${SSL_TRUSTSTORE_PASSWORD}
#spring.kafka.properties.ssl.key.password=${SSL_KEYSTORE_PASSWORD}

spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.enable-auto-commit=false

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer


spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE

#Topic
kafka.topic.users=users


logging.level.com.mnadeem.kafka=DEBUG
